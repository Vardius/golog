package golog

import (
	"context"
	"log"
)

type (
	// Verbose levels
	Verbose uint8
	// Logger interface
	Logger interface {
		Debug(ctx context.Context, format string, args ...interface{})
		Info(ctx context.Context, format string, args ...interface{})
		Warning(ctx context.Context, format string, args ...interface{})
		Error(ctx context.Context, format string, args ...interface{})
		Critical(ctx context.Context, format string, args ...interface{})

		// SetFlags override DefaultFlags value on a Logger instance https://golang.org/pkg/log/#pkg-constants
		SetFlags(flag int)
		// SetVerbosity override DefaultVerbosity value on a Logger instance
		SetVerbosity(verbosity Verbose)
	}

	loggerFactory func() Logger
)

// Verbose level flags
const (
	Critical Verbose = 1 << iota // Critical verbose level
	Error                        // Error verbose level
	Warning                      // Warning verbose level
	Info                         // Info verbose level
	Debug                        // Debug verbose level
	Disabled                     // Disabled verbose level disables logger messages. will override all other flags
)

const (
	// DebugPrefix text to prefix to each log entry generated by the Logger
	DebugPrefix = "DEBUG: "
	// InfoPrefix text to prefix to each log entry generated by the Logger
	InfoPrefix = "INFO: "
	// WarnPrefix text to prefix to each log entry generated by the Logger
	WarnPrefix = "WARN: "
	// ErrorPrefix text to prefix to each log entry generated by the Logger
	ErrorPrefix = "ERROR: "
	// FatalPrefix text to prefix to each log entry generated by the Logger
	FatalPrefix = "FATAL: "

	// DefaultFlags define default text to prefix to each log entry generated by the Logger
	DefaultFlags = log.Ldate | log.Ltime | log.Lmicroseconds | log.LUTC
	// DefaultVerbosity define default verbosity level
	DefaultVerbosity = Critical | Error | Warning | Info | Debug
)

// New returns a Logger.
var New loggerFactory
